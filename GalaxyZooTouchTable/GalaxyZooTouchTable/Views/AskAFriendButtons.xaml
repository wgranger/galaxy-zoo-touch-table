<UserControl x:Class="GalaxyZooTouchTable.Views.AskAFriendButtons"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GalaxyZooTouchTable.Views"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Lib="clr-namespace:GalaxyZooTouchTable.Lib"
             mc:Ignorable="d" 
             d:DesignHeight="31" d:DesignWidth="287">
    <UserControl.Resources>
        <Style x:Key="BoldWhiteFont" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="/GalaxyZooTouchTable;component/Fonts/#Karla"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style x:Key="IndicatorBorder" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Height" Value="11"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Width" Value="11"/>
        </Style>
        
        <Style x:Key="BusyCircle" TargetType="{x:Type Border}" BasedOn="{StaticResource IndicatorBorder}">
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="BorderBrush" Value="#FFAF26"/>
            <Setter Property="BorderThickness" Value="1"/>

            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource EqualityConverter}">
                                    <Binding Path="Classifier" />
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=local:AskAFriendButtons}" Path="DataContext.CooperatingClassifier"/>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=Active}" Value="True"/>
                        <Condition Binding="{Binding Path=Classifier.NotificationStatus}" Value="{x:Static Lib:NotificationStatus.ClearNotifications}"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AskAFriendButtons}}, Path=DataContext.NotificationStatus}" Value="{x:Static Lib:NotificationStatus.ClearNotifications}"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="QuestionMark" TargetType="{x:Type Border}" BasedOn="{StaticResource IndicatorBorder}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource EqualityConverter}">
                                    <Binding Path="Classifier" />
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=local:AskAFriendButtons}" Path="DataContext.CooperatingClassifier"/>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AskAFriendButtons}}, Path=DataContext.NotificationStatus}" Value="{x:Static Lib:NotificationStatus.HelpRequestSent}"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource EqualityConverter}">
                                    <Binding Path="Classifier" />
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=local:AskAFriendButtons}" Path="DataContext.CooperatingClassifier"/>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                        <Condition Binding="{Binding Classifier.NotificationStatus}" Value="{x:Static Lib:NotificationStatus.HelpingUser}"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExclamationPoint" TargetType="{x:Type Border}" BasedOn="{StaticResource IndicatorBorder}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource EqualityConverter}">
                                    <Binding Path="Classifier" />
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=local:AskAFriendButtons}" Path="DataContext.CooperatingClassifier"/>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AskAFriendButtons}}, Path=DataContext.NotificationStatus}" Value="{x:Static Lib:NotificationStatus.HelpRequestReceived}"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RequestDenied" TargetType="{x:Type Grid}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=NotificationStatus}" Value="{x:Static Lib:NotificationStatus.DeclinedHelp}">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RequestAccepted" TargetType="{x:Type Grid}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=NotificationStatus}" Value="{x:Static Lib:NotificationStatus.AcceptedHelp}"/>
                        <Condition Binding="{Binding Path=HideButtonNotification}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AnswerReceived" TargetType="{x:Type Grid}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=NotificationStatus}" Value="{x:Static Lib:NotificationStatus.AnswerGiven}"/>
                        <Condition Binding="{Binding Path=HideButtonNotification}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonRow" TargetType="{x:Type Grid}">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=NotificationStatus}" Value="{x:Static Lib:NotificationStatus.DeclinedHelp}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=NotificationStatus}" Value="{x:Static Lib:NotificationStatus.AcceptedHelp}"/>
                        <Condition Binding="{Binding Path=HideButtonNotification}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=NotificationStatus}" Value="{x:Static Lib:NotificationStatus.AnswerGiven}"/>
                        <Condition Binding="{Binding Path=HideButtonNotification}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="UserImage" TargetType="{x:Type Image}">
            <Setter Property="Opacity" Value="0.25"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource EqualityConverter}">
                                    <Binding Path="Classifier" />
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=local:AskAFriendButtons}" Path="DataContext.CooperatingClassifier"/>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" Value="1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=Active}" Value="True"/>
                        <Condition Binding="{Binding Path=Classifier.NotificationStatus}" Value="{x:Static Lib:NotificationStatus.ClearNotifications}"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AskAFriendButtons}}, Path=DataContext.NotificationStatus}" Value="{x:Static Lib:NotificationStatus.ClearNotifications}"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" Value="1"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AttentionBorder" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource EqualityConverter}">
                                    <Binding Path="Classifier" />
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=local:AskAFriendButtons}" Path="DataContext.CooperatingClassifier"/>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AskAFriendButtons}}, Path=DataContext.NotificationStatus}" Value="{x:Static Lib:NotificationStatus.HelpingUser}"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderThickness" Value="2"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="UserGrid" TargetType="{x:Type Grid}">
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=Active}" Value="True"/>
                        <Condition Binding="{Binding Path=Classifier.NotificationStatus}" Value="{x:Static Lib:NotificationStatus.ClearNotifications}"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsHitTestVisible" Value="True"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    
    <Viewbox>
        <Border Width="287" CornerRadius="3" Height="31" Background="#191A21">
            <Grid>
                <Grid Style="{StaticResource RequestDenied}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock
                            Style="{StaticResource BoldWhiteFont}"
                            FontSize="9"
                            Text="Sorry"
                            VerticalAlignment="Center"/>
                        <Image
                            Margin="2,0"
                            HorizontalAlignment="Left"
                            Source="{Binding CooperatingClassifier.User.Avatar}"
                            Height="24"/>
                        <TextBlock
                            Style="{StaticResource BoldWhiteFont}"
                            VerticalAlignment="Center"
                            FontSize="9"
                            Text="declined your invitation. Ask someone else?"/>
                    </StackPanel>
                    <fa:ImageAwesome
                        HorizontalAlignment="Right"
                        Foreground="White"
                        Icon="Times"
                        Margin="0,0,10,0"
                        Width="8.5">
                        <i:Interaction.Triggers>
                            <Lib:HandlingEventTrigger EventName="TouchUp">
                                <i:InvokeCommandAction Command="{Binding ResetNotifications}"/>
                            </Lib:HandlingEventTrigger>
                        </i:Interaction.Triggers>
                    </fa:ImageAwesome>
                </Grid>

                <Grid Style="{StaticResource RequestAccepted}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock
                            Style="{StaticResource BoldWhiteFont}"
                            FontSize="9"
                            Text="Horray"
                            VerticalAlignment="Center"/>
                        <Image
                            Margin="2,0"
                            HorizontalAlignment="Left"
                            Source="{Binding CooperatingClassifier.User.Avatar}"
                            Height="24"/>
                        <TextBlock
                            Style="{StaticResource BoldWhiteFont}"
                            VerticalAlignment="Center"
                            FontSize="9"
                            Text="accepted your invitation!"/>
                    </StackPanel>
                    <fa:ImageAwesome
                        HorizontalAlignment="Right"
                        Foreground="White"
                        Icon="Times"
                        Margin="0,0,10,0"
                        Width="8.5">
                        <i:Interaction.Triggers>
                            <Lib:HandlingEventTrigger EventName="TouchUp">
                                <i:InvokeCommandAction Command="{Binding ToggleButtonNotification}"/>
                            </Lib:HandlingEventTrigger>
                        </i:Interaction.Triggers>
                    </fa:ImageAwesome>
                </Grid>

                <Grid Style="{StaticResource AnswerReceived}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock
                            Style="{StaticResource BoldWhiteFont}"
                            FontSize="9"
                            Text="Check it out,"
                            VerticalAlignment="Center"/>
                        <Image
                            Margin="2,0"
                            HorizontalAlignment="Left"
                            Source="{Binding CooperatingClassifier.User.Avatar}"
                            Height="24"/>
                        <TextBlock
                            Style="{StaticResource BoldWhiteFont}"
                            VerticalAlignment="Center"
                            FontSize="9"
                            Text="made a classification!"/>
                    </StackPanel>
                    <fa:ImageAwesome
                        HorizontalAlignment="Right"
                        Foreground="White"
                        Icon="Times"
                        Margin="0,0,10,0"
                        Width="8.5">
                        <i:Interaction.Triggers>
                            <Lib:HandlingEventTrigger EventName="TouchUp">
                                <i:InvokeCommandAction Command="{Binding ToggleButtonNotification}"/>
                            </Lib:HandlingEventTrigger>
                        </i:Interaction.Triggers>
                    </fa:ImageAwesome>
                </Grid>
                
                <Grid Style="{StaticResource ButtonRow}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="117*"/>
                        <ColumnDefinition Width="170*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Style="{StaticResource BoldWhiteFont}"
                        TextWrapping="Wrap"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        TextAlignment="Right"
                        Text="See what a neighbor at the table thinks about this galaxy image."
                        FontSize="7"/>

                    <ItemsControl
                        Grid.Column="1"
                        ItemsSource="{Binding HelpfulUsers}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="5,0,0,0" Width="24" Height="24" Style="{StaticResource UserGrid}">
                                    <i:Interaction.Triggers>
                                        <Lib:HandlingEventTrigger EventName="TouchUp">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AskAFriendButtons}}, Path=DataContext.NotifyUser}" CommandParameter="{Binding}"/>
                                        </Lib:HandlingEventTrigger>
                                    </i:Interaction.Triggers>
                                    <Border Style="{StaticResource AttentionBorder}" BorderBrush="{StaticResource AttentionColor}" CornerRadius="15">
                                        <Image Source="{Binding Avatar}" Style="{StaticResource UserImage}" Width="24"/>
                                    </Border>

                                    <Border Style="{StaticResource BusyCircle}">
                                        <fa:ImageAwesome
                                            Foreground="#FFAF26"
                                            Icon="Minus"
                                            Width="5.7"
                                            Margin="0,0,0,0"
                                            HorizontalAlignment="Center"/>
                                    </Border>

                                    <Border Style="{StaticResource QuestionMark}">
                                        <fa:ImageAwesome
                                            Foreground="{StaticResource SuccessColor}"
                                            Icon="QuestionCircle"
                                            Width="9"
                                            Margin="0,0,0,0"/>
                                    </Border>

                                    <Border Style="{StaticResource ExclamationPoint}">
                                        <fa:ImageAwesome
                                            Foreground="{StaticResource AttentionColor}"
                                            Icon="ExclamationCircle"
                                            Width="9"
                                            Margin="0,0,0,0"/>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Grid>
        </Border>
    </Viewbox>
</UserControl>
