<UserControl x:Class="GalaxyZooTouchTable.ExamplesPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Lib="clr-namespace:GalaxyZooTouchTable.Lib"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             Background="Transparent"
             mc:Ignorable="d"
             d:DesignHeight="500" d:DesignWidth="300">

    <UserControl.Resources>
        <Storyboard x:Key="FadeOutStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="FadeInStoryboard">
            <DoubleAnimation BeginTime="0:0:0.2" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="MoveBackStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="BeginRotateArrowStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(fa:ImageAwesome.RenderTransform).(RotateTransform.Angle)" To="180" Duration="0:0:0.1"/>
        </Storyboard>

        <Storyboard x:Key="ReturnRotateArrowStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(fa:ImageAwesome.RenderTransform).(RotateTransform.Angle)" Duration="0:0:0.1"/>
        </Storyboard>

        <Style x:Key="RightArrowStyle" TargetType="{x:Type fa:ImageAwesome}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource BeginRotateArrowStoryboard}"/>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource ReturnRotateArrowStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExampleArrow" TargetType="{x:Type fa:ImageAwesome}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Icon" Value="CaretRight"/>
            <Setter Property="Margin" Value="4,0,0,0"/>
            <Setter Property="Height" Value="5"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource BeginRotateArrowStoryboard}"/>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource ReturnRotateArrowStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HeaderGrid" TargetType="{x:Type Grid}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].Angle" To="0" Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].X" To="0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].Angle" Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].X" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GalaxyExamples" TargetType="{x:Type Grid}">
            <Setter Property="Width" Value="130"/>
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="Background" Value="Transparent"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Opacity, RelativeSource={RelativeSource Self}}" Value="0">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SmoothExample" TargetType="{x:Type Grid}" BasedOn="{StaticResource GalaxyExamples}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsSelected}" Value="True"/>
                        <Condition>
                            <Condition.Binding>
                                <Binding Path="SelectedExample" Converter="{StaticResource ObjectEqualityStringConverter}">
                                    <Binding.ConverterParameter>
                                        <System:String>SmoothGalaxy</System:String>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Condition.Binding>
                            <Condition.Value>
                                <System:Boolean>False</System:Boolean>
                            </Condition.Value>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeOutStoryboard}"/>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}"/>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FeaturesExample" TargetType="{x:Type Grid}" BasedOn="{StaticResource GalaxyExamples}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsSelected}" Value="True"/>
                        <Condition>
                            <Condition.Binding>
                                <Binding Path="SelectedExample" Converter="{StaticResource ObjectEqualityStringConverter}">
                                    <Binding.ConverterParameter>
                                        <System:String>FeaturesGalaxy</System:String>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Condition.Binding>
                            <Condition.Value>
                                <System:Boolean>False</System:Boolean>
                            </Condition.Value>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeOutStoryboard}"/>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}"/>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=SelectedExample, Converter={StaticResource ObjectToTypeStringConverter}}" Value="FeaturesGalaxy">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="(Grid.RenderTransform).(TranslateTransform.Y)" To="-57" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource MoveBackStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="NotAGalaxyExample" TargetType="{x:Type Grid}" BasedOn="{StaticResource GalaxyExamples}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsSelected}" Value="True"/>
                        <Condition>
                            <Condition.Binding>
                                <Binding Path="SelectedExample" Converter="{StaticResource ObjectEqualityStringConverter}">
                                    <Binding.ConverterParameter>
                                        <System:String>NotAGalaxy</System:String>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Condition.Binding>
                            <Condition.Value>
                                <System:Boolean>False</System:Boolean>
                            </Condition.Value>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeOutStoryboard}"/>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}"/>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=SelectedExample, Converter={StaticResource ObjectToTypeStringConverter}}" Value="NotAGalaxy">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="(Grid.RenderTransform).(TranslateTransform.Y)" To="-115" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource MoveBackStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SelectedTextStackPanel" TargetType="{x:Type StackPanel}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation BeginTime="0:0:0.3" Storyboard.TargetProperty="(StackPanel.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.25"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(StackPanel.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ActiveExample" TargetType="{x:Type RowDefinition}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <Lib:GridLengthAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="Height" From="1" To="3" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <Lib:GridLengthAnimation Storyboard.TargetProperty="Height" From="3" To="1" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--//////////-->

        <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Panel.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Panel.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExampleImage" TargetType="{x:Type Border}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
            <Setter Property="CornerRadius" Value="2.85"/>
            <Setter Property="BorderThickness" Value="1"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="(Border.Width)" To="70" Duration="0:0:0.15"/>
                                <DoubleAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="(Border.Height)" To="70" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.Width)" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.Height)" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExampleScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="PanningMode" Value="HorizontalOnly"/>
            <Setter Property="Margin" Value="0,15,0,0"/>
        </Style>

        <Style x:Key="SelectedItemText" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Margin" Value="10,0"/>
            <Setter Property="Height" Value="80"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="PanningMode" Value="VerticalOnly"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ScrollableStackPanel" TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="16.9,0,0,0"/>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Height" Value="Auto"/>
        </Style>

        <Style x:Key="ExampleStackPanel" TargetType="{x:Type StackPanel}">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="16.9,0,0,0"/>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Height" Value="10"/>
        </Style>

        <Style x:Key="ExampleTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="/GalaxyZooTouchTable;component/Fonts/#Karla"/>
        </Style>

        <Style x:Key="GridSeparators" TargetType="{x:Type Separator}">
            <Setter Property="Canvas.Left" Value="16.9"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background" Value="{StaticResource DarkGrayColor}"/>
        </Style>

        <Style x:Key="HidingGridSeparators" BasedOn="{StaticResource GridSeparators}" TargetType="{x:Type Separator}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Viewbox>
        <Border x:Name="Panel" CornerRadius="0,2.85,2.85,0" Background="{StaticResource MedGrayColor}" Height="218" Width="130" Style="{StaticResource MainBorderStyle}">
            <Border.RenderTransform>
                <TranslateTransform X="{Binding Path=ActualWidth, ElementName=Panel, Converter={StaticResource HidePanelConverter}, ConverterParameter='-0.8'}"/>
            </Border.RenderTransform>

            <Canvas>
                <Grid Canvas.Left="16.9" Canvas.Top="10.2">
                    <i:Interaction.Triggers>
                        <Lib:HandlingEventTrigger EventName="TouchUp">
                            <i:InvokeCommandAction Command="{Binding TogglePanel}"/>
                        </Lib:HandlingEventTrigger>
                    </i:Interaction.Triggers>

                    <TextBlock Text="Examples" FontSize="9" Foreground="White" FontFamily="/GalaxyZooTouchTable;component/Fonts/#Karla" FontWeight="Bold"/>
                    <TextBlock Margin="0,14,0,0" Text="Tap each item to learn more" FontSize="7" Foreground="White" FontFamily="/GalaxyZooTouchTable;component/Fonts/#Karla" FontStyle="Italic"/>
                    <fa:ImageAwesome Margin="95,0,0,0" Style="{StaticResource ExampleArrow}" VerticalAlignment="Top" Foreground="White" Height="10" Icon="ChevronRight"/>
                </Grid>

                <Separator Canvas.Top="36.15" Style="{StaticResource GridSeparators}"/>

                <Grid Canvas.Top="44.2" Style="{StaticResource SmoothExample}" Width="130">
                    <i:Interaction.Triggers>
                        <Lib:HandlingEventTrigger EventName="TouchUp">
                            <i:InvokeCommandAction Command="{Binding SelectItem}" CommandParameter="{Binding Smooth}"/>
                        </Lib:HandlingEventTrigger>
                    </i:Interaction.Triggers>

                    <StackPanel Style="{StaticResource ExampleStackPanel}">
                        <i:Interaction.Triggers>
                            <Lib:HandlingEventTrigger EventName="TouchUp">
                                <i:InvokeCommandAction Command="{Binding UnselectItem}" CommandParameter="{Binding Smooth}"/>
                            </Lib:HandlingEventTrigger>
                        </i:Interaction.Triggers>

                        <TextBlock Style="{StaticResource ExampleTextBlock}" Text="Smooth"/>
                        <fa:ImageAwesome Style="{StaticResource ExampleArrow}">
                            <fa:ImageAwesome.RenderTransform>
                                <RotateTransform/>
                            </fa:ImageAwesome.RenderTransform>
                        </fa:ImageAwesome>
                    </StackPanel>

                    <ScrollViewer Style="{StaticResource ExampleScrollViewer}">
                        <StackPanel Style="{StaticResource ScrollableStackPanel}">
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding Smooth.ImageOne}"/>
                                </Border.Background>
                            </Border>
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding Smooth.ImageTwo}"/>
                                </Border.Background>
                            </Border>
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding Smooth.ImageThree}"/>
                                </Border.Background>
                            </Border>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>

                <Separator Canvas.Top="96.15" Style="{StaticResource HidingGridSeparators}"/>

                <Grid Canvas.Top="101.2" Style="{StaticResource FeaturesExample}">
                    <Grid.RenderTransform>
                        <TranslateTransform/>
                    </Grid.RenderTransform>
                    
                    <i:Interaction.Triggers>
                        <Lib:HandlingEventTrigger EventName="TouchUp">
                            <i:InvokeCommandAction Command="{Binding SelectItem}" CommandParameter="{Binding Features}"/>
                        </Lib:HandlingEventTrigger>
                    </i:Interaction.Triggers>

                    <StackPanel Style="{StaticResource ExampleStackPanel}">
                        <i:Interaction.Triggers>
                            <Lib:HandlingEventTrigger EventName="TouchUp">
                                <i:InvokeCommandAction Command="{Binding UnselectItem}" CommandParameter="{Binding Features}"/>
                            </Lib:HandlingEventTrigger>
                        </i:Interaction.Triggers>

                        <TextBlock Style="{StaticResource ExampleTextBlock}" Text="Features"/>
                        <fa:ImageAwesome Style="{StaticResource ExampleArrow}">
                            <fa:ImageAwesome.RenderTransform>
                                <RotateTransform/>
                            </fa:ImageAwesome.RenderTransform>
                        </fa:ImageAwesome>
                    </StackPanel>

                    <ScrollViewer Style="{StaticResource ExampleScrollViewer}">
                        <StackPanel Style="{StaticResource ScrollableStackPanel}">
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding Features.ImageOne}"/>
                                </Border.Background>
                            </Border>
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding Features.ImageTwo}"/>
                                </Border.Background>
                            </Border>
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding Features.ImageThree}"/>
                                </Border.Background>
                            </Border>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>

                <Separator Canvas.Top="153.15" Style="{StaticResource HidingGridSeparators}"/>

                <Grid Canvas.Top="159.2" Style="{StaticResource NotAGalaxyExample}">
                    <Grid.RenderTransform>
                        <TranslateTransform/>
                    </Grid.RenderTransform>

                    <i:Interaction.Triggers>
                        <Lib:HandlingEventTrigger EventName="TouchUp">
                            <i:InvokeCommandAction Command="{Binding SelectItem}" CommandParameter="{Binding NotAGalaxy}"/>
                        </Lib:HandlingEventTrigger>
                    </i:Interaction.Triggers>

                    <StackPanel Style="{StaticResource ExampleStackPanel}">
                        <i:Interaction.Triggers>
                            <Lib:HandlingEventTrigger EventName="TouchUp">
                                <i:InvokeCommandAction Command="{Binding UnselectItem}" CommandParameter="{Binding NotAGalaxy}"/>
                            </Lib:HandlingEventTrigger>
                        </i:Interaction.Triggers>

                        <TextBlock Style="{StaticResource ExampleTextBlock}" Text="Not A Galaxy"/>
                        <fa:ImageAwesome Style="{StaticResource ExampleArrow}">
                            <fa:ImageAwesome.RenderTransform>
                                <RotateTransform/>
                            </fa:ImageAwesome.RenderTransform>
                        </fa:ImageAwesome>
                    </StackPanel>

                    <ScrollViewer Style="{StaticResource ExampleScrollViewer}">
                        <StackPanel Style="{StaticResource ScrollableStackPanel}">
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding NotAGalaxy.ImageOne}"/>
                                </Border.Background>
                            </Border>
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding NotAGalaxy.ImageTwo}"/>
                                </Border.Background>
                            </Border>
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding NotAGalaxy.ImageThree}"/>
                                </Border.Background>
                            </Border>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>

                <ScrollViewer Canvas.Top="140" x:Name="ItemText" Style="{StaticResource SelectedItemText}">
                    <StackPanel Style="{StaticResource SelectedTextStackPanel}">
                        <StackPanel.RenderTransform>
                            <TranslateTransform X="{Binding Path=ActualWidth, ElementName=ItemText, Converter={StaticResource HidePanelConverter}, ConverterParameter='-1'}"/>
                        </StackPanel.RenderTransform>
                        <TextBlock FontSize="9" Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}}" TextWrapping="Wrap" Foreground="White" FontFamily="/GalaxyZooTouchTable;component/Fonts/#Karla">
                                <Run Text="{Binding SelectedExample.Description, Mode=OneWay}"/>
                                <LineBreak/><LineBreak/>
                                <Run Text="{Binding SelectedExample.Description2, Mode=OneWay}"/>
                        </TextBlock>
                    </StackPanel>
                </ScrollViewer>
            </Canvas>
        </Border>
    </Viewbox>
</UserControl>
