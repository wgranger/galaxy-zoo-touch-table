<UserControl x:Class="GalaxyZooTouchTable.ExamplesPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Lib="clr-namespace:GalaxyZooTouchTable.Lib"
             xmlns:Behaviors="clr-namespace:GalaxyZooTouchTable.Behaviors"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             Background="Transparent"
             mc:Ignorable="d"
             d:DesignHeight="218.2" d:DesignWidth="130.9">

    <UserControl.Resources>
        <Storyboard x:Key="FadeOutStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="FadeInStoryboard">
            <DoubleAnimation BeginTime="0:0:0.2" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="MoveBackStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="BeginRotateArrowStoryboard">
            <DoubleAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="(fa:ImageAwesome.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)" To="180" Duration="0:0:0.1"/>
        </Storyboard>

        <Storyboard x:Key="ReturnRotateArrowStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(fa:ImageAwesome.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)" Duration="0:0:0.1"/>
        </Storyboard>

        <Storyboard x:Key="MoveArrowLeftStoryboard">
            <DoubleAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="(fa:ImageAwesome.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.X)" To="-35" Duration="0:0:0.1"/>
        </Storyboard>        
        
        <Storyboard x:Key="MoveArrowRightStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(fa:ImageAwesome.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.X)" Duration="0:0:0.1"/>
        </Storyboard>

        <Storyboard x:Key="MoveToggleTextRight">
            <DoubleAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="(TextBlock.RenderTransform).(TranslateTransform.X)" To="8" Duration="0:0:0.1"/>
        </Storyboard>

        <Storyboard x:Key="MoveToggleTextLeft">
            <DoubleAnimation Storyboard.TargetProperty="(TextBlock.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.1"/>
        </Storyboard>

        <Style x:Key="ExampleArrow" TargetType="{x:Type fa:ImageAwesome}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Icon" Value="CaretRight"/>
            <Setter Property="Margin" Value="4,1,0,0"/>
            <Setter Property="Height" Value="5"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource BeginRotateArrowStoryboard}"/>
                        <BeginStoryboard Storyboard="{StaticResource MoveArrowLeftStoryboard}"/>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource ReturnRotateArrowStoryboard}"/>
                        <BeginStoryboard Storyboard="{StaticResource MoveArrowRightStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GalaxyExamples" TargetType="{x:Type Grid}">
            <Setter Property="Width" Value="131"/>
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="Background" Value="{StaticResource MedGrayColor}"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Opacity, RelativeSource={RelativeSource Self}}" Value="0">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SmoothExample" TargetType="{x:Type Grid}" BasedOn="{StaticResource GalaxyExamples}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsSelected}" Value="True"/>
                        <Condition>
                            <Condition.Binding>
                                <Binding Path="SelectedExample" Converter="{StaticResource ObjectEqualityStringConverter}">
                                    <Binding.ConverterParameter>
                                        <System:String>SmoothGalaxy</System:String>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Condition.Binding>
                            <Condition.Value>
                                <System:Boolean>False</System:Boolean>
                            </Condition.Value>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeOutStoryboard}"/>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}"/>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FeaturesExample" TargetType="{x:Type Grid}" BasedOn="{StaticResource GalaxyExamples}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsSelected}" Value="True"/>
                        <Condition>
                            <Condition.Binding>
                                <Binding Path="SelectedExample" Converter="{StaticResource ObjectEqualityStringConverter}">
                                    <Binding.ConverterParameter>
                                        <System:String>FeaturesGalaxy</System:String>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Condition.Binding>
                            <Condition.Value>
                                <System:Boolean>False</System:Boolean>
                            </Condition.Value>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeOutStoryboard}"/>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}"/>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=SelectedExample, Converter={StaticResource ObjectToTypeStringConverter}}" Value="FeaturesGalaxy">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="(Grid.RenderTransform).(TranslateTransform.Y)" To="-57" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource MoveBackStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="NotAGalaxyExample" TargetType="{x:Type Grid}" BasedOn="{StaticResource GalaxyExamples}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsSelected}" Value="True"/>
                        <Condition>
                            <Condition.Binding>
                                <Binding Path="SelectedExample" Converter="{StaticResource ObjectEqualityStringConverter}">
                                    <Binding.ConverterParameter>
                                        <System:String>NotAGalaxy</System:String>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Condition.Binding>
                            <Condition.Value>
                                <System:Boolean>False</System:Boolean>
                            </Condition.Value>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeOutStoryboard}"/>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}"/>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=SelectedExample, Converter={StaticResource ObjectToTypeStringConverter}}" Value="NotAGalaxy">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="(Grid.RenderTransform).(TranslateTransform.Y)" To="-115" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource MoveBackStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SelectedTextStackPanel" TargetType="{x:Type StackPanel}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation BeginTime="0:0:0.3" Storyboard.TargetProperty="(StackPanel.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.25"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(StackPanel.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Panel.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Panel.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExampleImage" TargetType="{x:Type Border}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
            <Setter Property="CornerRadius" Value="2.85"/>
            <Setter Property="BorderThickness" Value="1"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="(Border.Width)" To="70" Duration="0:0:0.15"/>
                                <DoubleAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="(Border.Height)" To="70" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.Width)" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.Height)" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExampleScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="PanningMode" Value="HorizontalOnly"/>
            <Setter Property="Margin" Value="0,15,0,0"/>
        </Style>

        <Style x:Key="SelectedItemText" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Margin" Value="18,0"/>
            <Setter Property="Height" Value="77"/>
            <Setter Property="Width" Value="106"/>
            <Setter Property="PanningMode" Value="VerticalOnly"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ScrollableStackPanel" TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="18,0,0,0"/>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Height" Value="Auto"/>
        </Style>

        <Style x:Key="ExampleGrid" TargetType="{x:Type Grid}">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="18,0,14,0"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Background" Value="{StaticResource MedGrayColor}"/>
        </Style>

        <Style x:Key="ExampleTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="7.5"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="FontFamily" Value="/GalaxyZooTouchTable;component/Fonts/#Karla"/>
        </Style>

        <Style x:Key="GridSeparators" TargetType="{x:Type Separator}">
            <Setter Property="Canvas.Left" Value="18"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background" Value="{StaticResource DarkGrayColor}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HidingGridSeparators" BasedOn="{StaticResource GridSeparators}" TargetType="{x:Type Separator}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToggleArrowStyle" TargetType="{x:Type fa:ImageAwesome}">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Icon" Value="ChevronRight"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource BeginRotateArrowStoryboard}"/>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource ReturnRotateArrowStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExampleText" TargetType="{x:Type TextBlock}">
            <Setter Property="Text" Value="Examples"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="/GalaxyZooTouchTable;component/Fonts/#Karla"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style x:Key="OpenExampleText" BasedOn="{StaticResource ExampleText}" TargetType="{x:Type TextBlock}">
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="Canvas.Top" Value="28"/>
            <Setter Property="Canvas.Left" Value="123"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeOutStoryboard}"/>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToggleText" BasedOn="{StaticResource ExampleText}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="6.75"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Typography.Capitals" Value="AllSmallCaps"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource MoveToggleTextRight}"/>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource MoveToggleTextLeft}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToggleStackPanel" TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>
    </UserControl.Resources>

    <Viewbox>
        <Border x:Name="Panel" CornerRadius="0,2.85,2.85,0" Background="{StaticResource MedGrayColor}" Height="218.2" Width="130.9" Style="{StaticResource MainBorderStyle}">
            <Border.RenderTransform>
                <TranslateTransform X="{Binding Path=ActualWidth, ElementName=Panel, Converter={StaticResource HidePanelConverter}, ConverterParameter='-0.75'}"/>
            </Border.RenderTransform>

            <Canvas Background="Transparent">
                <i:Interaction.Triggers>
                    <Lib:HandlingEventTrigger EventName="TouchUp">
                        <i:InvokeCommandAction Command="{Binding OpenPanel}"/>
                    </Lib:HandlingEventTrigger>
                </i:Interaction.Triggers>

                <Grid Canvas.Left="18" Canvas.Top="10.2" Width="102">
                    <i:Interaction.Triggers>
                        <Lib:HandlingEventTrigger EventName="TouchUp">
                            <i:InvokeCommandAction Command="{Binding TogglePanel}"/>
                        </Lib:HandlingEventTrigger>
                    </i:Interaction.Triggers>

                    <TextBlock Style="{StaticResource ExampleText}"/>
                    <TextBlock Margin="0,12,0,0" Text="Tap each item to learn more." FontSize="7" Foreground="White" FontFamily="/GalaxyZooTouchTable;component/Fonts/#Karla" FontStyle="Italic"/>
                    <fa:ImageAwesome Style="{StaticResource ToggleArrowStyle}">
                        <fa:ImageAwesome.RenderTransform>
                            <TransformGroup>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </fa:ImageAwesome.RenderTransform>
                    </fa:ImageAwesome>
                </Grid>

                <TextBlock Style="{StaticResource OpenExampleText}">
                    <TextBlock.RenderTransform>
                        <RotateTransform Angle="90"/>
                    </TextBlock.RenderTransform>
                </TextBlock>

                <Separator Canvas.Top="36.15" Style="{StaticResource GridSeparators}"/>

                <Grid Canvas.Top="44" Style="{StaticResource SmoothExample}">
                    <i:Interaction.Triggers>
                        <Lib:HandlingEventTrigger EventName="TouchUp">
                            <i:InvokeCommandAction Command="{Binding SelectItem}" CommandParameter="{Binding Smooth}"/>
                        </Lib:HandlingEventTrigger>
                    </i:Interaction.Triggers>

                    <Grid Style="{StaticResource ExampleGrid}" TouchUp="SmoothStackPanel_TouchUp">
                        <i:Interaction.Triggers>
                            <Lib:HandlingEventTrigger EventName="TouchUp">
                                <i:InvokeCommandAction Command="{Binding UnselectItem}" CommandParameter="{Binding Smooth}"/>
                            </Lib:HandlingEventTrigger>
                        </i:Interaction.Triggers>

                        <TextBlock Style="{StaticResource ExampleTextBlock}" Text="Smooth"/>
                        <StackPanel Style="{StaticResource ToggleStackPanel}">
                            <TextBlock Style="{StaticResource ToggleText}" Text="More Info">
                                <TextBlock.RenderTransform>
                                    <TranslateTransform/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <fa:ImageAwesome Style="{StaticResource ExampleArrow}">
                                <fa:ImageAwesome.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </fa:ImageAwesome.RenderTransform>
                            </fa:ImageAwesome>
                        </StackPanel>
                    </Grid>

                    <ScrollViewer x:Name="SmoothScroller" Style="{StaticResource ExampleScrollViewer}">
                        <i:Interaction.Behaviors>
                            <Behaviors:DisableOpacityMaskOnEndScroll IsHorizontal="True" StartPercent="0.9"/>
                        </i:Interaction.Behaviors>
                        <StackPanel Style="{StaticResource ScrollableStackPanel}">
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding Smooth.ImageOne}"/>
                                </Border.Background>
                            </Border>
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding Smooth.ImageTwo}"/>
                                </Border.Background>
                            </Border>
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding Smooth.ImageThree}"/>
                                </Border.Background>
                            </Border>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>

                <Separator Canvas.Top="96.15" Style="{StaticResource HidingGridSeparators}"/>

                <Grid Canvas.Top="101.2" Style="{StaticResource FeaturesExample}">
                    <Grid.RenderTransform>
                        <TranslateTransform/>
                    </Grid.RenderTransform>
                    
                    <i:Interaction.Triggers>
                        <Lib:HandlingEventTrigger EventName="TouchUp">
                            <i:InvokeCommandAction Command="{Binding SelectItem}" CommandParameter="{Binding Features}"/>
                        </Lib:HandlingEventTrigger>
                    </i:Interaction.Triggers>

                    <Grid Style="{StaticResource ExampleGrid}" TouchUp="FeaturesStackPanel_TouchUp">
                        <i:Interaction.Triggers>
                            <Lib:HandlingEventTrigger EventName="TouchUp">
                                <i:InvokeCommandAction Command="{Binding UnselectItem}" CommandParameter="{Binding Features}"/>
                            </Lib:HandlingEventTrigger>
                        </i:Interaction.Triggers>

                        <TextBlock Style="{StaticResource ExampleTextBlock}" Text="Features"/>
                        <StackPanel Style="{StaticResource ToggleStackPanel}">
                            <TextBlock Style="{StaticResource ToggleText}" Text="More Info">
                                <TextBlock.RenderTransform>
                                    <TranslateTransform/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <fa:ImageAwesome Style="{StaticResource ExampleArrow}">
                                <fa:ImageAwesome.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </fa:ImageAwesome.RenderTransform>
                            </fa:ImageAwesome>
                        </StackPanel>
                    </Grid>

                    <ScrollViewer x:Name="FeaturesScroller" Style="{StaticResource ExampleScrollViewer}">
                        <i:Interaction.Behaviors>
                            <Behaviors:DisableOpacityMaskOnEndScroll IsHorizontal="True" StartPercent="0.9"/>
                        </i:Interaction.Behaviors>
                        <StackPanel Style="{StaticResource ScrollableStackPanel}">
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding Features.ImageOne}"/>
                                </Border.Background>
                            </Border>
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding Features.ImageTwo}"/>
                                </Border.Background>
                            </Border>
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding Features.ImageThree}"/>
                                </Border.Background>
                            </Border>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>

                <Separator Canvas.Top="153.15" Style="{StaticResource HidingGridSeparators}"/>

                <Grid Canvas.Top="159.2" Style="{StaticResource NotAGalaxyExample}">
                    <Grid.RenderTransform>
                        <TranslateTransform/>
                    </Grid.RenderTransform>

                    <i:Interaction.Triggers>
                        <Lib:HandlingEventTrigger EventName="TouchUp">
                            <i:InvokeCommandAction Command="{Binding SelectItem}" CommandParameter="{Binding NotAGalaxy}"/>
                        </Lib:HandlingEventTrigger>
                    </i:Interaction.Triggers>

                    <Grid Style="{StaticResource ExampleGrid}" TouchUp="NotAGalaxyStackPanel_TouchUp">
                        <i:Interaction.Triggers>
                            <Lib:HandlingEventTrigger EventName="TouchUp">
                                <i:InvokeCommandAction Command="{Binding UnselectItem}" CommandParameter="{Binding NotAGalaxy}"/>
                            </Lib:HandlingEventTrigger>
                        </i:Interaction.Triggers>

                        <TextBlock Style="{StaticResource ExampleTextBlock}" Text="Not a Galaxy"/>
                        <StackPanel Style="{StaticResource ToggleStackPanel}">
                            <TextBlock Style="{StaticResource ToggleText}" Text="More Info">
                                <TextBlock.RenderTransform>
                                    <TranslateTransform/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <fa:ImageAwesome Style="{StaticResource ExampleArrow}">
                                <fa:ImageAwesome.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </fa:ImageAwesome.RenderTransform>
                            </fa:ImageAwesome>
                        </StackPanel>
                    </Grid>

                    <ScrollViewer x:Name="NotAGalaxyScroller" Style="{StaticResource ExampleScrollViewer}">
                        <i:Interaction.Behaviors>
                            <Behaviors:DisableOpacityMaskOnEndScroll IsHorizontal="True" StartPercent="0.9"/>
                        </i:Interaction.Behaviors>
                        <StackPanel Style="{StaticResource ScrollableStackPanel}">
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding NotAGalaxy.ImageOne}"/>
                                </Border.Background>
                            </Border>
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding NotAGalaxy.ImageTwo}"/>
                                </Border.Background>
                            </Border>
                            <Border Style="{StaticResource ExampleImage}">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding NotAGalaxy.ImageThree}"/>
                                </Border.Background>
                            </Border>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>

                <ScrollViewer Canvas.Top="140" x:Name="ItemText" Style="{StaticResource SelectedItemText}">
                    <i:Interaction.Behaviors>
                        <Behaviors:DisableOpacityMaskOnEndScroll IsHorizontal="False" StartPercent="0.6"/>
                    </i:Interaction.Behaviors>
                    <StackPanel Style="{StaticResource SelectedTextStackPanel}">
                        <StackPanel.RenderTransform>
                            <TranslateTransform X="{Binding Path=ActualWidth, ElementName=ItemText, Converter={StaticResource HidePanelConverter}, ConverterParameter='-1'}"/>
                        </StackPanel.RenderTransform>
                        <TextBlock FontSize="8" Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}}" TextWrapping="Wrap" Foreground="White" FontFamily="/GalaxyZooTouchTable;component/Fonts/#Karla">
                                <Run Text="{Binding SelectedExample.Description, Mode=OneWay}"/>
                                <LineBreak/><LineBreak/>
                                <Run Text="{Binding SelectedExample.Description2, Mode=OneWay}"/>
                        </TextBlock>
                    </StackPanel>
                </ScrollViewer>
            </Canvas>
        </Border>
    </Viewbox>
</UserControl>
